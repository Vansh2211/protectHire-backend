# version: '3.8'

# services:
#   app:
#     build: .
#     ports:
#       - "8080:8080"
#     environment:
#       - SPRING_PROFILES_ACTIVE=docker
#       - DB_HOST=postgres
#       - DB_PORT=5432
#       - DB_NAME=protecthire_db
#       - DB_USERNAME=protecthire_user
#       - DB_PASSWORD=protecthire_password
#       - JWT_SECRET=protechHireSecretKey2024!@#$%^&*()_+{}[]|;:,.<>?
#       - REDIS_HOST=redis
#       - REDIS_PORT=6379
#     depends_on:
#       postgres:
#         condition: service_healthy
#       redis:
#         condition: service_started
#     networks:
#       - protecthire-network
#     restart: unless-stopped

#   postgres:
#     image: postgres:15-alpine
#     environment:
#       POSTGRES_DB: protecthire_db
#       POSTGRES_USER: protecthire_user
#       POSTGRES_PASSWORD: protecthire_password
#       POSTGRES_INITDB_ARGS: "--encoding=UTF8"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#       - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
#     ports:
#       - "5432:5432"
#     networks:
#       - protecthire-network
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U protecthire_user -d protecthire_db"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     restart: unless-stopped

#   redis:
#     image: redis:7-alpine
#     ports:
#       - "6379:6379"
#     volumes:
#       - redis_data:/data
#     networks:
#       - protecthire-network
#     command: redis-server --appendonly yes
#     healthcheck:
#       test: ["CMD", "redis-cli", "ping"]
#       interval: 10s
#       timeout: 3s
#       retries: 3
#     restart: unless-stopped

# volumes:
#   postgres_data:
#     driver: local
#   redis_data:
#     driver: local

# networks:
#   protecthire-network:
#     driver: bridge